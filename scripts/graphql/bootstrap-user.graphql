# Supabase GraphQL bootstrap for a fresh user to make the dashboard work immediately.
# IMPORTANT: Replace the placeholder IDs/emails/passwords before running.
#
# Headers (GraphiQL):
# - apikey:         YOUR_SUPABASE_ANON_KEY
# - authorization:  Bearer YOUR_SUPABASE_ANON_KEY  (or a user JWT if you want RLS per-user)
#
# Notes:
# - This file uses explicit IDs so all inserts can happen in one request.
# - If your Stocks already exist, skip the "SeedStocks" mutation and only run the others.
# - If any insert fails due to unique constraints, adjust the values or run sections separately.

# 1) Bootstrap core user + trading account + default watchlist
mutation BootstrapUserCore {
  # Create application user with explicit ID
  insertIntoUsersCollection(
    objects: [{
      id: "USER_ID_REPLACE_WITH_UUID",           # e.g., "c1cfd2f0-1a11-4d6a-9c1b-1b6a61b1abcd"
      name: "New User",
      email: "newuser@example.com",
      password: "$2b$12$REPLACE_WITH_BCRYPT_HASH", # optional: if you store passwords (NextAuth OAuth may keep this null)
      role: "USER",
      isActive: true
    }]
  ) {
    affectedCount
    records { id email role isActive }
  }

  # Create Trading Account tied to the same user
  insertIntoTradingAccountsCollection(
    objects: [{
      id: "TRADING_ACCOUNT_ID_REPLACE_WITH_UUID",
      userId: "USER_ID_REPLACE_WITH_UUID",
      balance: 0,
      availableMargin: 0,
      usedMargin: 0
    }]
  ) {
    affectedCount
    records { id userId balance availableMargin usedMargin }
  }

  # Create a default Watchlist
  insertIntoWatchlistsCollection(
    objects: [{
      id: "WATCHLIST_ID_REPLACE_WITH_UUID",
      userId: "USER_ID_REPLACE_WITH_UUID",
      name: "My Watchlist"
    }]
  ) {
    affectedCount
    records { id name userId }
  }
}

# 2) OPTIONAL: Seed a few Stocks if your table is empty.
#    If you already have stocks, SKIP this and use those existing stock IDs in the next mutation.
mutation SeedStocks {
  insertIntoStocksCollection(objects: [
    {
      id: "STOCK_ID_AAPL_UUID",
      instrumentId: "AAPL-001",   # must be unique
      exchange: "NASDAQ",
      ticker: "AAPL",
      name: "Apple Inc."
    },
    {
      id: "STOCK_ID_TSLA_UUID",
      instrumentId: "TSLA-001",
      exchange: "NASDAQ",
      ticker: "TSLA",
      name: "Tesla, Inc."
    },
    {
      id: "STOCK_ID_NVDA_UUID",
      instrumentId: "NVDA-001",
      exchange: "NASDAQ",
      ticker: "NVDA",
      name: "NVIDIA Corporation"
    }
  ]) {
    affectedCount
    records { id ticker instrumentId }
  }
}

# 3) OPTIONAL: Seed watchlist items (requires an existing watchlist and stock IDs).
#    Replace WATCHLIST_ID and STOCK_ID_* with real IDs (either from SeedStocks above or your existing Stocks).
mutation SeedWatchlistItems {
  insertIntoWatchlistItemsCollection(objects: [
    { watchlistId: "WATCHLIST_ID_REPLACE_WITH_UUID", stockId: "STOCK_ID_AAPL_UUID" },
    { watchlistId: "WATCHLIST_ID_REPLACE_WITH_UUID", stockId: "STOCK_ID_TSLA_UUID" },
    { watchlistId: "WATCHLIST_ID_REPLACE_WITH_UUID", stockId: "STOCK_ID_NVDA_UUID" }
  ]) {
    affectedCount
  }
}

# After running the above, your dashboard queries for:
# - users (current user)
# - trading_accounts (by userId)
# - watchlists (by userId) and their items
# - orders/positions (will be empty arrays initially)
# should all work without nulls/404s.
